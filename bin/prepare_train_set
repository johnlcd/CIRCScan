#!/bin/bash

echo ======================================

echo " "
echo USAGE:
echo " "
echo " $0 -t <cell_type> --circ <known_circ.bed> -R <ratio of negative VS positive> [ --sl < list of intron pair length ( sum of 2 introns ) to do stratified random sampling (space seperated 3 number, defult: 20000 30000 40000 ) > ] "
echo " "

echo --------------------------------------

echo " "
echo EXAMPLEs:
echo " "
echo " $0 -t GM12878 --circ GM12878_circ.bed -R 1 "
echo " "

echo ======================================

echo " "
echo Command is: $0 $*
echo " "


if [ $# -ge "6" ]  && [ $1 == "-t" ] && [ $3 == "--circ" ] && [ $5 == "-R" ]; then


	if [ ! -f "$2_anno_comb" ]; then

		echo ">>> Annotaion file of $2 cell $2_anno_comb do not find !  "
		echo "    Check whether this file exsist. "
		echo " "

	elif [ ! -f "$4" ]; then

		echo ">>> File of known circRNA $4 do not find !  "
		echo "    Check whether this file exsist. "
		echo " "

	elif [ -f "$2_pred" ] && [ -f "$2_train" ]; then

		echo ">>> Traning set exsist. "
		echo "    Please remove $2_train if want to do re-sample. "

	else\

		if [ $# == "6" ] || ( [ $# == "10" ] && [ $7 == "--sl" ] ); then

# Map the known circRNAs regions to intron pair intervals

			echo '>>> Data sets for traning and prediction do not find ! '
			echo " "
			echo '    Start to build ... ... '
			echo " "
			echo '    Map the known circRNAs regions to intron pair intervals first ... ... '
			sed '1d' $PKG_DIR/data/intron_pairs_interval.txt | bedtools intersect -f 1.00 -F 1.00 -a - -b $4 -wa -wb | \
				cut -f 4 | sort -k 1,1 -u > $2_circ_intron_pair
			echo '    CircRNAs flaning intron pairs selected. '
			echo " "
			
# Stratified random sampling && Building training set

			if [ $# == "6" ]; then
				echo "    Do stratified random sampling by intron pair length 20000,30000,40000 ... ... "
				echo " "
				echo "    Divided intron pairs into 4 parts ... ... "
				awk -v l1=10000 '$2 < l1 {print $1}' $PKG_DIR/data/intron_pairs_length > $2_IP_part1
				awk -v l1=10000 -v l2=20000 '$2 >= l1 && $2 < l2 {print $1}' $PKG_DIR/data/intron_pairs_length > $2_IP_part2
				awk -v l1=20000 -v l2=30000 '$2 >= l1 && $2 < l2 {print $1}' $PKG_DIR/data/intron_pairs_length > $2_IP_part3
				awk -v l1=30000 '$2 >= l1 {print $1}' $PKG_DIR/data/intron_pairs_length > $2_IP_part4
				echo "    All intron pairs have been divided by length. "
				echo " "
				echo "    Building training set ... ... "
				echo " "
				time python $PKG_DIR/bin/model/make_set.py -t $2 --circ $2_circ_intron_pair --sl 20000,30000,40000 -R $6 -pp $PKG_DIR/data/intron_pairs_with_promoter
			
			elif [ $# == "10" ] && [ $7 == "--sl" ]; then
				echo "    Do stratified random sampling by intron pair length $8,$9,${10} ... ... "
				echo " "
				echo "    Divided intron pairs into 4 parts ... ... "
				awk -v l1=$8 '$2 < l1 {print $1}' $PKG_DIR/data/intron_pairs_length > $2_IP_part1
				awk -v l1=$8 -v l2=$9 '$2 >= l1 && $2 < l2 {print $1}' $PKG_DIR/data/intron_pairs_length > $2_IP_part2
				awk -v l1=$9 -v l2=${10} '$2 >= l1 && $2 < l2 {print $1}' $PKG_DIR/data/intron_pairs_length > $2_IP_part3
				awk -v l1=${10} '$2 >= l1 {print $1}' $PKG_DIR/data/intron_pairs_length > $2_IP_part4
				echo "    All intron pairs have been divided by length. "
				echo " "
				echo "    Building training set ... ... "
				echo " "
				time python $PKG_DIR/bin/model/make_set.py -t $2 --circ $2_circ_intron_pair --sl $8,$9,${10} -R $6 -pp $PKG_DIR/data/intron_pairs_with_promoter

			fi

			echo '    Training set built. '
			echo " "
		
		fi
	
		echo '### Task finished. '
		echo " "
	
	fi

fi


# END
